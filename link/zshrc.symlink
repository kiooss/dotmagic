###############################################################################
# Yang Yang's zsh config.
###############################################################################
# PROFILE_STARTUP {{{
PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
  zmodload zsh/zprof # Output load-time statistics
  # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
  PS4=$'%D{%M%S%.} %N:%i> '
  # exec 3>&2 2>"${XDG_CACHE_HOME:-$HOME/tmp}/zsh_statup.$$"
  exec 3>&2 2>"/tmp/zsh_statup.$$"
  setopt xtrace prompt_subst
fi
# }}}

# Path to your oh-my-zsh configuration.
ZSH="$HOME/.oh-my-zsh"
# export is important if you want to use DOTFILES env in sub shell.
export DOTFILES="$HOME/.dotfiles"
MYZSH="$DOTFILES/zsh"
ZSH_CUSTOM="$MYZSH/omz_custom"
# DIRCOLORS=$HOME/.dircolors

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
[[ -d ~/workspace ]] && export CODE_DIR=~/workspace
[[ -d ~/.cache ]] && export CACHE_DIR=~/.cache

# PATH config {{{
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH
# adding path directory for custom scripts
export PATH="$DOTFILES/bin:$PATH"
# check for custom bin directory and add to path
[[ -d "$HOME/bin" ]] && export PATH="$HOME/bin:$PATH"
[[ -d "$HOME/.local/bin" ]] && export PATH="$HOME/.local/bin:$PATH"
[[ -d "$HOME/php/bin" ]] && export PATH="$HOME/php/bin:$PATH"
# add vendor bin to path
export PATH="./vendor/bin:$PATH"
# Added by n-install (see http://git.io/n-install-repo).
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"
# rbenv
export PATH="$DOTFILES/vendor/rbenv/bin:$PATH"
# pyenv
export PATH="$HOME/.pyenv/bin:$PATH"

# Add android tools
if [[ -d /Applications/adt-bundle-mac-x86_64 ]]; then
  export ANDROID_HOME="/Applications/adt-bundle-mac-x86_64/sdk"
  export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
fi
# }}}

# Set name of the theme to load.
ZSH_THEME="powerlevel9k/powerlevel9k"

# {{{ POWERLEVEL9K config
export DEFAULT_USER="$USER"
# POWERLEVEL9K_MODE="awesome-fontconfig"
POWERLEVEL9K_MODE='nerdfont-complete'

# POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\uE0B1'
# POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\uE0B3'
POWERLEVEL9K_LEFT_SEGMENT_SEPARATOR=$'\uE0B4'
POWERLEVEL9K_RIGHT_SEGMENT_SEPARATOR=$'\uE0B6'

# POWERLEVEL9K_FOLDER_ICON=""
# POWERLEVEL9K_HOME_SUB_ICON="$(print_icon "HOME_ICON")"
# POWERLEVEL9K_DIR_PATH_SEPARATOR=" $(print_icon "LEFT_SUBSEGMENT_SEPARATOR") "

POWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0

POWERLEVEL9K_DIR_OMIT_FIRST_CHARACTER=false

POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND='black'
POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND='178'
POWERLEVEL9K_NVM_BACKGROUND="238"
POWERLEVEL9K_NVM_FOREGROUND="green"
POWERLEVEL9K_CONTEXT_DEFAULT_FOREGROUND="blue"
POWERLEVEL9K_DIR_WRITABLE_FORBIDDEN_FOREGROUND="015"

POWERLEVEL9K_TIME_BACKGROUND='255'
POWERLEVEL9K_TIME_FOREGROUND='blue'
#POWERLEVEL9K_COMMAND_TIME_FOREGROUND='gray'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND='245'
POWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND='black'

POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_RPROMPT_ON_NEWLINE=false

POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="%{%F{red}%}╭"
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="%{%F{red}%}╰%{%F{red}%}❯%{%F{green}%}❯%{%F{blue}%}❯ "

POWERLEVEL9K_CUSTOM_DRINK_WATER="drink_water"
POWERLEVEL9K_CUSTOM_DRINK_WATER_FOREGROUND='black'
POWERLEVEL9K_CUSTOM_DRINK_WATER_BACKGROUND='red'

POWERLEVEL9K_CUSTOM_BASE16_THEME="echo \"\ue623\" \$(echo \$BASE16_THEME | cut -d '-' -f2-)"
POWERLEVEL9K_CUSTOM_BASE16_THEME_FOREGROUND='black'
POWERLEVEL9K_CUSTOM_BASE16_THEME_BACKGROUND='cyan'

# POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
# POWERLEVEL9K_SHORTEN_STRATEGY="truncate_middle"

POWERLEVEL9K_VCS_GIT_HOOKS=(vcs-detect-changes git-untracked git-aheadbehind git-stash git-remotebranch)

POWERLEVEL9K_TIME_FORMAT="%D{%H:%M}"
POWERLEVEL9K_OS_ICON_BACKGROUND="red"
POWERLEVEL9K_OS_ICON_FOREGROUND="black"
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon root_indicator context dir dir_writable vcs)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs command_execution_time time custom_base16_theme custom_drink_water)
POWERLEVEL9K_SHOW_CHANGESET=true
# }}}

# {{{ oh-my-zsh config
# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"
# }}}

# {{{ plugins config
plugins=(
cp
capistrano
colored-man-pages
# emoji
encode64
fancy-ctrl-z
git
gem
gitfast
history-substring-search
nmap
npm
systemadmin
rails
rake-fast
tmuxinator
themes
z
zsh-autosuggestions
zsh-navigation-tools
zsh-syntax-highlighting
zsh-completions
)

# my own zsh plugins
my_plugins=(
abbreviations
add-http-proxy
aliases
auto-ls-after-cd
fix-ssh-agent
insert-datestamp
mysql
thirsty
util-functions
)

if [[ "$OSTYPE" = darwin* ]]; then
  # plugin used in my mac.
  plugins=(
  $plugins
  adb
  gradle
  pass
  )
  my_plugins=(
  $my_plugins
  util-functions-osx
  )
else
  # plugin used in my dev machine.
  plugins=(
  $plugins
  command-not-found
  composer
  rbenv
  ssh-agent
  symfony
  symfony2
  )
  my_plugins=(
  $my_plugins
  aliases-osx
  tmux-pane-words
  util-functions-osx
  zle
  )
fi
# }}}

# add all my own plugin dir to fpath.
for plugin ($my_plugins); do
  fpath=($MYZSH/plugins/$plugin $fpath)
done

[ -z "$TMUX" ] && export TERM=xterm-256color
[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# secret env values
[[ -s $HOME/.secret_env ]] && source $HOME/.secret_env

source $MYZSH/config.zsh
# if want to use oh-my-zsh, then uncomment the below line

typeset -U path cdpath fpath manpath # Remove duplicates in the following arrays.
source $ZSH/oh-my-zsh.sh

for config_file ($MYZSH/lib/*.zsh); do
  source $config_file
done
unset config_file

for plugin ($my_plugins); do
  source $MYZSH/plugins/$plugin/$plugin.plugin.zsh
done
unset plugin

# for theme_file ($MYZSH/themes/*.zsh); do
#   source $theme_file
# done
# unset theme_file

if hash rbenv 2>/dev/null; then
  eval "$(rbenv init -)"
fi

#if hash pyenv 2>/dev/null; then
#    eval "$(pyenv init -)"
#    eval "$(pyenv virtualenv-init -)"
#fi

source $MYZSH/base16-shell/base16-shell.plugin.zsh

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# freshshell/fresh
# [ -f ~/.fresh/build/shell.sh ] && source ~/.fresh/build/shell.sh

# . $HOME/.asdf/asdf.sh
# . $HOME/.asdf/completions/asdf.bash

###############################################################################
# PROFILE_STARTUP_END {{{
if [[ "$PROFILE_STARTUP" == true ]]; then
  zprof
  unsetopt xtrace
  exec 2>&3 3>&-
fi
# }}}
