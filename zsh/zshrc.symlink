###############################################################################
# Yang Yang's zsh config.
###############################################################################
# PROFILE_STARTUP {{{
PROFILE_STARTUP=false
if [[ "$PROFILE_STARTUP" == true ]]; then
    zmodload zsh/zprof # Output load-time statistics
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    # exec 3>&2 2>"${XDG_CACHE_HOME:-$HOME/tmp}/zsh_statup.$$"
    exec 3>&2 2>"/tmp/zsh_statup.$$"
    setopt xtrace prompt_subst
fi
# }}}
#
# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
DOTFILES=$HOME/.dotfiles
MYZSH=$DOTFILES/zsh
# DIRCOLORS=$HOME/.dircolors

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
[[ -d ~/workspace ]] && export CODE_DIR=~/workspace

# PATH config {{{
# adding path directory for custom scripts
export PATH="$DOTFILES/bin:$PATH"
# check for custom bin directory and add to path
[[ -d "$HOME/bin" ]] && export PATH="$HOME/bin:$PATH"
[[ -d "$HOME/.local/bin" ]] && export PATH="$HOME/.local/bin:$PATH"
[[ -d "$HOME/php/bin" ]] && export PATH="$HOME/php/bin:$PATH"
# add vendor bin to path
export PATH="./vendor/bin:$PATH"
# Added by n-install (see http://git.io/n-install-repo).
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"
# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"
# pyenv
export PATH="$HOME/.pyenv/bin:$PATH"

# Add android tools
if [[ -d /Applications/adt-bundle-mac-x86_64 ]]; then
    export ANDROID_HOME="/Applications/adt-bundle-mac-x86_64/sdk"
    export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
fi
# }}}

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
# ZSH_THEME="robbyrussell"
# ZSH_THEME="random"
# ZSH_THEME="dpoggi"
ZSH_THEME="agnoster"
# ZSH_THEME="re5et"
# ZSH_THEME="cloud"
# ZSH_THEME="tjkirch"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
    cp
    capistrano
    colored-man-pages
    emoji
    encode64
    fancy-ctrl-z
    git
    gem
    gitfast
    git-remote-branch
    history-substring-search
    nmap
    npm
    systemadmin
    rails
    rake-fast
    tmux
    tmuxinator
    themes
    zsh_reload
    zsh-navigation-tools
    zsh-syntax-highlighting
    z
    zsh-completions
)

# my own zsh plugins
my_plugins=(
    abbreviations
    add-http-proxy
    aliases
    auto-ls-after-cd
    fix-ssh-agent
    insert-datestamp
    mysql
    thirsty
    util-functions
)

if [[ "$OSTYPE" = darwin* ]]; then
    # plugin used in my mac.
    plugins=(
        $plugins
        adb
        gradle
        pass
    )
    my_plugins=(
        $my_plugins
        util-functions-osx
    )
else
    # plugin used in my dev machine.
    plugins=(
        $plugins
        command-not-found
        composer
        rbenv
        ssh-agent
        symfony
        symfony2
    )
    my_plugins=(
        $my_plugins
        aliases-osx
        tmux-pane-words
        util-functions-osx
        zle
    )
fi

# add all my own plugin dir to fpath.
for plugin ($my_plugins); do
    fpath=($MYZSH/plugins/$plugin $fpath)
done

[ -z "$TMUX" ] && export TERM=xterm-256color
[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# secret env values
[[ -s $HOME/.secret_env ]] & source $HOME/.secret_env

source $MYZSH/config.zsh
# if want to use oh-my-zsh, then uncomment the below line
source $ZSH/oh-my-zsh.sh

unalias c 2>/dev/null

for config_file ($MYZSH/lib/*.zsh); do
  source $config_file
done
unset config_file

for plugin ($my_plugins); do
    source $MYZSH/plugins/$plugin/$plugin.plugin.zsh
done
unset plugin

if hash rbenv 2>/dev/null; then
    eval "$(rbenv init -)"
fi

#if hash pyenv 2>/dev/null; then
#    eval "$(pyenv init -)"
#    eval "$(pyenv virtualenv-init -)"
#fi

BASE16_SHELL=$HOME/.config/base16-shell/
[ -n "$PS1" ] && [ -s $BASE16_SHELL/profile_helper.sh ] && eval "$($BASE16_SHELL/profile_helper.sh)"

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# freshshell/fresh
[ -f ~/.fresh/build/shell.sh ] && source ~/.fresh/build/shell.sh

# . $HOME/.asdf/asdf.sh

# . $HOME/.asdf/completions/asdf.bash

###############################################################################
# PROFILE_STARTUP_END {{{
if [[ "$PROFILE_STARTUP" == true ]]; then
    zprof
    unsetopt xtrace
    exec 2>&3 3>&-
fi
# }}}
