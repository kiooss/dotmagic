#!/usr/bin/env bash

set -ex

main() {
  local target=$1
  local current_branch
  local project
  current_branch=$(current_branch)

  if [[ $current_branch =~ (.*)-develop$ ]]; then
    project=${current_branch/-develop/}
  fi

  case "$target" in
    "staging") pull_request_staging "$project" ;;
    "production") pull_request_production "$project" ;;
    *) echo "Wrong deploy target." ;;
  esac
}

current_branch() {
  git symbolic-ref --short HEAD
}

get_diff() {
  git log --oneline --no-decorate --no-merges "$1".. | grep -aEo '#[0-9]+' | sort | uniq
}

pull_request_staging() {
  local project=$1
  local diff
  local target_branch
  local pr_label
  local pr_title

  if [[ -z $project ]]; then
    target_branch="staging"
    diff=$(get_diff "$target_branch")
    pr_label="staging-release"
    pr_title="ステージング反映"
  else
    target_branch="${project}-staging"
    diff=$(get_diff "$target_branch")
    pr_label="staging-release,${project}"
    pr_title="${project}-ステージング反映"
  fi

  if [[ -n $diff ]]; then
    echo "These tickets are include: ${diff}"
    hub pull-request -b "$target_branch" -l "$pr_label" -m "$pr_title" -m "$diff"
  else
    hub pull-request -b "$target_branch" -l "$pr_label" -m "$pr_title"
  fi
}

pull_request_production() {
  local project=$1
  local diff
  local target_branch
  local pr_label
  local pr_title

  if [[ -z $project ]]; then
    target_branch="master"
    diff=$(get_diff "$target_branch")
    pr_label="production-release"
    pr_title="本番反映"
  else
    target_branch="${project}-master"
    diff=$(get_diff "$target_branch")
    pr_label="production-release,${project}"
    pr_title="${project}-本番反映"
  fi

  if [[ -n $diff ]]; then
    echo "These tickets are include: ${diff}"
    hub pull-request -b "$target_branch" -l "$pr_label" -m "$pr_title" -m "$diff"
  else
    hub pull-request -b "$target_branch" -l "$pr_label" -m "$pr_title"
  fi
}

main "$@"
