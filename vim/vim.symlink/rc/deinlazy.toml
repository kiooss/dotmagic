[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'
on_source = ['unite.vim', 'vimshell.vim']

[[plugins]]
repo = 'Shougo/denite.nvim'
on_cmd = 'Denite'
hook_source = 'source ~/.vim/rc/plugins/denite.rc.vim'
hook_add = '''
  nnoremap suc :<C-u>Denite colorscheme -auto-preview<CR>
  nnoremap suh :<C-u>Denite help<CR>
  nnoremap sur :<C-u>Denite register<CR>
  nnoremap suR :<C-u>Denite -resume<CR>
  nnoremap <silent> <leader>f  :<C-u>Denite file_rec/git -highlight-mode-insert=Search<CR>
  nnoremap <silent> <leader>ol :<C-u>Denite outline -highlight-mode-insert=Search<CR>
  nnoremap <silent> <leader>ls :<C-u>Denite buffer<CR>
  " nnoremap <silent> ;r
  "       \ :<C-u>Denite -buffer-name=register
  "       \ register neoyank<CR>
  " xnoremap <silent> ;r
  "       \ :<C-u>Denite -default-action=replace -buffer-name=register
  "       \ register neoyank<CR>
  nnoremap <silent> <leader>rc
        \ :<C-u>Denite file_rec:~/.vim/rc -highlight-mode-insert=Search<CR>
  nnoremap <silent> / :<C-u>Denite -buffer-name=search -highlight-mode-insert=Search
        \ line<CR>
  nnoremap <silent> * :<C-u>DeniteCursorWord -buffer-name=search
        \ -mode=normal line<CR>
  " nnoremap <silent> <leader>s :<C-u>Denite file_point file_old
  "       \ `finddir('.git', ';') != '' ? 'file_rec/git' : 'file_rec'`<CR>
  nnoremap <silent><expr> tt  &filetype == 'help' ?  "g\<C-]>" :
        \ ":\<C-u>DeniteCursorWord -buffer-name=tag -immediately
        \  tag:include\<CR>"
  " nnoremap <silent><expr> ;t :<C-u>DeniteCursorWord --buffer-name=tag
  "       \ tag:include<CR>
  nnoremap <silent><expr> tp  &filetype == 'help' ?
        \ ":\<C-u>pop\<CR>" : ":\<C-u>Denite -mode=normal jump\<CR>"
  " nnoremap <silent> [Window]n :<C-u>Denite dein<CR>
  nnoremap <silent> <leader>ag :<C-u>Denite -buffer-name=search
        \ -no-empty -mode=normal grep<CR>
  nnoremap <silent> <leader>g :<C-u>Denite -buffer-name=search
        \ -no-empty -mode=normal grep/git<CR>
  nnoremap <silent> n :<C-u>Denite -buffer-name=search
        \ -resume -mode=normal -refresh<CR>
  nnoremap <silent> ft :<C-u>Denite -highlight-mode-insert=Search filetype<CR>
  " nnoremap <silent> <C-t> :<C-u>Denite
  "       \ -select=`tabpagenr()-1` -mode=normal deol<CR>
  " nnoremap <silent> <C-k> :<C-u>Denite -mode=normal change jump<CR>
  " nnoremap <silent> <leader>gs :<C-u>Denite gitstatus<CR>
  " nnoremap <silent> ;;
  "       \ :<C-u>Denite command command_history<CR>
'''

[[plugins]]
repo = 'Yggdroot/indentLine'
on_cmd = 'IndentLinesToggle'
hook_add = '''
  nnoremap <silent> <leader>\ :<C-u>IndentLinesToggle<CR>
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
on_cmd = ['NERDTree', 'NERDTreeToggle', 'NERDTreeFind']
hook_add = '''
  " close NERDTree after a file is opened
  let g:NERDTreeQuitOnOpen=0
  " show hidden files in NERDTree
  let NERDTreeShowHidden=1
  " remove some files by extension
  let NERDTreeIgnore = ['\.js.map$', '\~$']
  " Toggle NERDTree
  nnoremap <silent> <leader>k :NERDTreeToggle<cr>
  " expand to the path of the file in the current buffer
  nnoremap <silent> <leader>y :NERDTreeFind<cr>
  augroup nerd_loader
    autocmd!
    autocmd VimEnter * silent! autocmd! FileExplorer
    autocmd BufEnter,BufNew *
          \  if isdirectory(expand('<amatch>'))
          \|   :NERDTree
          \|   execute 'autocmd! nerd_loader'
          \| endif
  augroup END
'''

[[plugins]]
repo = 'godlygeek/tabular'
on_cmd = 'Tabularize'
hook_add = '''
  nnoremap <Leader>= :Tabularize /=>\?<CR>
  vnoremap <Leader>= :Tabularize /=>\?<CR>
  nnoremap <Leader>: :Tabularize /:\zs<CR>
  vnoremap <Leader>: :Tabularize /:\zs<CR>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
on_map = {n = '<Plug>'}
hook_add = '''
  " nnoremap <Leader><Leader> <Plug>(easymotion-prefix)
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
on_ft = 'toml'

[[plugins]]
repo = 'StanAngeloff/php.vim'
on_ft = 'php'

[[plugins]]
repo = 'shawncplus/phpcomplete.vim'
on_ft = 'php'

[[plugins]]
repo = 'stephpy/vim-php-cs-fixer'
on_ft = 'php'

[[plugins]]
repo = 'arnaud-lb/vim-php-namespace'
on_ft = 'php'
hook_add = '''
  let g:php_namespace_sort_after_insert = 1
  function! IPhpInsertUse()
      call PhpInsertUse()
      call feedkeys('a',  'n')
  endfunction
  " autocmd FileType php inoremap <Leader>u <Esc>:call IPhpInsertUse()<CR>
  autocmd FileType php noremap <Leader>u :call PhpInsertUse()<CR>

  function! IPhpExpandClass()
      call PhpExpandClass()
      call feedkeys('a', 'n')
  endfunction
  " autocmd FileType php inoremap <Leader>e <Esc>:call IPhpExpandClass()<CR>
  autocmd FileType php noremap <Leader>e :call PhpExpandClass()<CR>

  " autocmd FileType php inoremap <Leader>s <Esc>:call PhpSortUse()<CR>
  autocmd FileType php noremap <Leader>s :call PhpSortUse()<CR>
'''

[[plugins]]
repo = 'qbbr/vim-symfony'
on_ft = 'php'

[[plugins]]
repo = 'docteurklein/php-getter-setter.vim'
on_ft = 'php'

[[plugins]]
repo = 'tobyS/vmustache'
on_ft = 'php'

[[plugins]]
repo = 'tobyS/pdv'
on_ft = 'php'
hook_add = '''
  let g:pdv_template_dir = $HOME ."/.vim/plugged/pdv/templates_snip"
  nnoremap <Leader>doc :call pdv#DocumentWithSnip()<CR>
'''

[[plugins]]
repo = 'vim-ruby/vim-ruby'
on_ft = 'ruby'

[[plugins]]
repo = 'ecomba/vim-ruby-refactoring'
on_ft = 'ruby'

[[plugins]]
repo = 'tsaleh/vim-shoulda'
on_ft = 'ruby'

[[plugins]]
repo = 'tpope/vim-rails'
on_ft = 'ruby'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'cakebaker/scss-syntax.vim'
on_ft = 'scss'

[[plugins]]
repo = 'groenewege/vim-less'
on_ft = 'less'

[[plugins]]
repo = 'chrisbra/csv.vim'
on_ft = 'csv'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'kchmck/vim-coffee-script'
on_ft = 'coffee'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'
