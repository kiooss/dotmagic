# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh
DOTFILES=$HOME/.dotfiles

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
#ZSH_THEME="robbyrussell"
# ZSH_THEME="random"
ZSH_THEME="dpoggi"
# ZSH_THEME="agnoster"
# ZSH_THEME="re5et"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
alias zshconfig="vi ~/.zshrc"
alias zz="source ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(
    adb
    branch
    cp
    command-not-found
    capistrano
    colored-man
    composer
    encode64
    fancy-ctrl-z
    git
    gem
    gradle
    gitfast
    git-remote-branch
    history-substring-search
    nmap
    meteor
    svn
    sudo
    symfony2
    systemadmin
    rails
    ruby
    rake-fast
    rbenv
    tmux
    themes
    zsh_reload
    zsh-navigation-tools
    zsh-syntax-highlighting
    zsh-completions
    z
)

############################################
# zplug start
############################################
# source ~/.zplug/init.zsh
# zplug "zplug/zplug"
# zplug "zsh-users/zsh-history-substring-search"
# zplug "zsh-users/zsh-syntax-highlighting", nice:10
#
# # zplug "mollifier/cd-gitroot"
#
# # Use the package as a command
# # And accept glob patterns (e.g., brace, wildcard, ...)
# zplug "Jxck/dotfiles", as:command, use:"bin/{histuniq,color}"
#
# # Grab binaries from GitHub Releases
# # and rename with the "rename-to:" tag
# # zplug "junegunn/fzf-bin", \
# #     from:gh-r, \
# #     as:command, \
# #     rename-to:fzf, \
# #     use:"*darwin*amd64*"
#
# # Group dependencies
# # Load "emoji-cli" if "jq" is installed in this example
# # zplug "stedolan/jq", \
# #     as:command, \
# #     rename-to:jq
# # zplug "b4b4r07/emoji-cli", \
# #     on:"stedolan/jq"
#
# zplug "lib/completion", from:oh-my-zsh
#
# zplug "plugins/brew", from:oh-my-zsh, if:"which brew"
# zplug "plugins/capistrano", from:oh-my-zsh
# zplug "plugins/encode64", from:oh-my-zsh
# zplug "plugins/fancy-ctrl-z", from:oh-my-zsh
# zplug "plugins/gem", from:oh-my-zsh, if:"which gem"
# zplug "plugins/git", from:oh-my-zsh, if:"which git"
# zplug "plugins/git-extras", from:oh-my-zsh, if:"which git"
# zplug "plugins/rails", from:oh-my-zsh
# zplug "plugins/rbenv", from:oh-my-zsh
# zplug "plugins/rake-fast", from:oh-my-zsh
# zplug "plugins/ruby", from:oh-my-zsh
# zplug "plugins/symfony2", from:oh-my-zsh
#
# # Themes
# zplug "themes/dpoggi", from:oh-my-zsh
# # zplug "arialdomartini/oh-my-git", use:"*.sh"
# # zplug "arialdomartini/oh-my-git-themes", use:"oppa-lana-style.zsh-theme"
#
# # Install plugins if there are plugins that have not been installed
# if ! zplug check --verbose; then
#     printf "Install? [y/N]: "
#     if read -q; then
#         echo; zplug install
#     fi
# fi
#
# # Then, source plugins and add commands to $PATH
# zplug load --verbose
#
############################################
# zplug end
############################################

# define the code directory
# This is where my code exists and where I want the `c` autocomplete to work from exclusively
if [[ -d ~/workspace ]]; then
    export CODE_DIR=~/workspace
fi

# source all .zsh files inside of the zsh/ directory
for config ($DOTFILES/zsh/**/*.zsh) source $config

# if want to use oh-my-zsh, then uncomment the below line
source $ZSH/oh-my-zsh.sh
source $HOME/.bash_aliases

source $DOTFILES/zsh/abbreviations.zsh
source $DOTFILES/zsh/zle.zsh

# Customize to your needs...
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATH


[[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# display how long all tasks over 10 seconds take
export REPORTTIME=10

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

[ -z "$TMUX" ] && export TERM=xterm-256color

#### Add android tools
if [[ -d /Applications/adt-bundle-mac-x86_64 ]]; then
    export ANDROID_HOME="/Applications/adt-bundle-mac-x86_64/sdk"
    export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools
fi

export TZ="/usr/share/zoneinfo/Asia/Tokyo"
export BUNDLER_EDITOR=vim
export SVN_EDITOR=vim

# rbenv
export PATH="$HOME/.rbenv/bin:$PATH"

if hash rbenv 2>/dev/null; then
    eval "$(rbenv init -)"
fi

# secret env values
if [[ -f $HOME/.secret_env ]]; then
    source $HOME/.secret_env
fi

# if need php5.5 console
export PATH="/usr/local/php55/bin:$HOME/.local/bin:$PATH"

export PATH="$HOME/php/bin:$PATH"

#[ -f ~/.shell_prompt.sh ] && source ~/.shell_prompt.sh

# source "$HOME/.vim/plugged/gruvbox/gruvbox_256palette.sh"

# pyenv
export PATH="$HOME/.pyenv/bin:$PATH"

if hash pyenv 2>/dev/null; then
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
fi

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

