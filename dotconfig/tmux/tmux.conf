# vim: set ft=tmux:

set -g default-shell $SHELL
run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# set -g default-command "reattach-to-user-namespace -l zsh"
if 'command -v reattach-to-user-namespace >/dev/null' \
    'set -g default-command "reattach-to-user-namespace -l $SHELL"'


# tmux display things in 256 colors
# set-option -g default-terminal "tmux-256color"

#  enable terminal compability
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# Undercurl
# set -g default-terminal "${TERM}"
set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:RGB"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

set-option -g history-limit 20000

set -s set-clipboard on

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set-option -s escape-time 0

# tmux messages are displayed for 4 seconds
set-option -g display-time 4000

# emacs key bindings in tmux command prompt (prefix + :)
set-option -g status-keys emacs

# focus events enabled for terminals that support them
set-option -g focus-events on

# Start window and pane numbering at 1, (0 is too hard to reach).
set-option -g base-index 1
set-window-option -g pane-base-index 1

# start with window number 1
set-option -g base-index 1
set-option -g renumber-windows on

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Don't wrap searches; it's super confusing given tmux's reverse-ordering of
# position info in copy mode.
set -w -g wrap-search off

# Dynamically update iTerm tab and window titles.
set -g set-titles on

# #T      = standard window title (last command, see ~/.bash_profile)
# #h      = short hostname
# #S      = session name
# #W      = tmux window name
#
# (Would love to include #(pwd) here as well, but that would only print the
# current working directory relative to the session -- ie. always the starting
# cwd -- which is not very interesting).
set -g set-titles-string "#T : #h > #S > #W"

# Show bells in window titles.
set -g window-status-bell-style fg=yellow,bold,underscore

# remap prefix from 'C-b' to 'C-Space'
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# c-n/c-p to switch between next/prev window
bind C-p previous-window
bind C-n next-window
bind C-Space last-window

# split panes using | and -
bind '\' split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

bind g new-window -n '' lazygit
# close other panes except current one
bind X kill-pane -a

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.config/tmux/tmux.conf \; display "tmux conf reloaded!"

# kill server
bind K confirm-before -p "Kill the server? (y/n)" "kill-server"

# set default directory for new windows in this session to current directory:
bind W attach-session -c "#{pane_current_path}"

# switch panes using vi convension
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"


# -n (alias for -T root, The root table is used for keys pressed without the
# prefix key)
# bind -n M-h select-pane -L
# bind -n M-j select-pane -D
# bind -n M-k select-pane -U
# bind -n M-l select-pane -R

bind e set-window-option synchronize-panes
bind m set-option mouse

# moving between windows with vim movement keys
# The -r flag indicates this key may repeat, see the repeat-time option.
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize pane shortcuts using arrow keys without prefix
# bind -n M-Left resize-pane -L 2
# bind -n M-Right resize-pane -R 2
# bind -n M-Up resize-pane -U 2
# bind -n M-Down resize-pane -D 2

bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8

# swap the current window to first and selected it.
bind-key -n M-0 swap-window -t 1\; select-window -t 1

# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1
bind-key -n C-S-Left swap-window -t -1\; select-window -t -1
bind-key -n C-S-Right swap-window -t +1\; select-window -t +1

# Enable mouse mode (tmux 2.1 and above)
set-window-option -g mouse on
# set-option -g mouse off

# don't rename windows automatically
# set-option -g allow-rename off
set-option -g allow-rename on

# for nested tmux sessions
bind-key a send-prefix

setw -g mode-keys vi

# For those times when C-c and q are not enough.
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip"
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection

unbind p
bind p paste-buffer

# if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
#     bind-key -t vi-copy 'v' begin-selection; \
#     bind-key -t vi-copy 'y' copy-selection; \
#     bind-key -t vi-copy Enter copy-pipe 'nc localhost -U ~/.clipper.sock' \
#     "

# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' " \
#     bind-key -Tcopy-mode-vi 'v' send -X begin-selection; \
#     bind-key -Tcopy-mode-vi 'y' send -X copy-selection; \
#     bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel 'nc -U ~/.clipper.sock' \
#     "

# Search back to last prompt (mnemonic: "[b]ack"); searches for non-breaking
# space in prompt.
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "❯ "

bind -N "Create a new session." \
  C command-prompt -p "new session name:" "new-session -s %%"
bind -N "Select session with fzf" \
  G display-popup -E -b none -w 80% -h 70% "tmux list-sessions -F '#{session_name} -- #{W:#{E:window-status-format} }' -f '#{==:#{session_attached},0}' 2>/dev/null | fzf --exit-0 --height=100% --preview-window=down:80% --preview='tmux capture-pane -ep -t {1}:' | cut -d ' ' -f 1 | xargs tmux switch-client -t"
bind -N "Create a new popup." \
  P display-popup -E -w 80% -h 70%


# Activity Monitoring
setw -g monitor-activity off
set -g visual-activity off
# setw -g monitor-activity on
# set -g visual-activity on

# tpm config.
# set -g @base16-statusline 'main'

set -g @prefix_highlight_bg black
set -g @prefix_highlight_fg red
set -g @prefix_highlight_prefix_prompt "\uf6d7"
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_copy_prompt "\uf0c5"
set -g @prefix_highlight_copy_mode_attr "fg=red,bg=black,bold"
set -g @prefix_highlight_output_prefix ''
set -g @prefix_highlight_output_suffix ''

# status bar (top|bottom)
set-option -g status-position bottom
#set -g status-right "#{prefix_highlight} #{ram_fg_color} \uf85a#{ram_icon} #{ram_percentage}#{cpu_fg_color} \
#\uf2db#{cpu_icon} #{cpu_percentage}#[default] \
##[fg=black]#{@main_separator} #(get-weather) \
##[fg=black]#{@main_separator} #[fg=yellow]%H:%M:%S %Z \
##[fg=white]#{@main_separator} #[fg=blue]%d-%b-%y %a "

set -g @tmux_power_theme 'moon'
set -g @tmux_power_prefix_highlight_pos 'R'
set -g @tmux_power_time_format '%H:%M:%S %Z'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'kiooss/tmux-power'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# set -g @plugin 'jatap/tmux-base16-statusline'
# set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

run-shell "~/.config/tmux/tmux-power.tmux"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
run '~/.tmux/plugins/tpm/tpm'
